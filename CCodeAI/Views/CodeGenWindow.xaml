<Window
    x:Class="CCodeAI.Views.CodeGenWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:converters="clr-namespace:CCodeAI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:CCodeAI.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:platform="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:res="clr-namespace:CCodeAI.Resources"
    xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
    xmlns:viewmodels="clr-namespace:CCodeAI.ViewModels"
    x:Name="window"
    Title="CodeGen"
    Width="800"
    Height="800"
    d:DataContext="{d:DesignInstance Type=viewmodels:CodeGenWindowViewModel}"
    toolkit:Themes.UseVsTheme="True"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:StringIsNullOrEmptyToVisibilityConveter x:Key="StringIsNullOrEmptyToVisibilityConveter" />

        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!--  Header  -->
                            <Border
                                Grid.Row="0"
                                Margin="10,10,10,0"
                                Background="{DynamicResource VsBrush.Window}"
                                CornerRadius="2">
                                <Label
                                    Content="{TemplateBinding Header}"
                                    FontWeight="Bold"
                                    Foreground="{DynamicResource VsBrush.WindowText}" />
                            </Border>

                            <!--  Content  -->
                            <Border
                                Grid.Row="1"
                                Margin="10,6,10,10"
                                Background="{DynamicResource VsBrush.Window}"
                                BorderBrush="#D0CECE"
                                BorderThickness="1"
                                CornerRadius="0,0,2,2">
                                <ContentPresenter />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DrawingImage x:Key="SendDrawingImage">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V16 H16 V0 H0 Z">
                    <DrawingGroup Opacity="1">
                        <GeometryDrawing Geometry="F1 M16,16z M0,0z M1.5,1.5L15,7.5 1.5,13.5 4.5,7.5z">
                            <GeometryDrawing.Brush>
                                <SolidColorBrush Opacity="0.1" Color="{DynamicResource VsColor.WindowText}" />
                            </GeometryDrawing.Brush>
                        </GeometryDrawing>
                        <GeometryDrawing Brush="{DynamicResource VsBrush.WindowText}" Geometry="F1 M16,16z M0,0z M1.7,1.043L1.05,1.724 3.941,7.5 1.053,13.276 1.703,13.957 15.203,7.957 15.203,7.043z M2.567,2.523L12.644,7 4.809,7z M4.809,8L12.644,8 2.57,12.477z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="StopDrawingImage">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V16 H16 V0 H0 Z">
                    <DrawingGroup Opacity="1">
                        <DrawingGroup Opacity="0.75">
                            <GeometryDrawing Brush="#FFC50B17" Geometry="F1 M16,16z M0,0z M12.5,3.5L12.5,12.5 3.5,12.5 3.5,3.5z" />
                        </DrawingGroup>
                        <GeometryDrawing Brush="#FFC50B17" Geometry="F1 M16,16z M0,0z M12.5,3L3.5,3 3,3.5 3,12.5 3.5,13 12.5,13 13,12.5 13,3.5z M12,12L4,12 4,4 12,4z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="150" />
            <RowDefinition Height="*" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <GroupBox Header="Skills">
            <ComboBox
                IsEditable="False"
                ItemsSource="{Binding SemanticFunctions}"
                SelectedItem="{Binding SelectedSemanticModel}">
                <ComboBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="2"
                                    FontWeight="Bold"
                                    Text="{Binding Name}" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ComboBox.GroupStyle>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </GroupBox>
        <GroupBox
            Grid.Row="1"
            Margin="0,0,0,2"
            Header="Input">
            <Grid Background="{DynamicResource VsBrush.Window}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <TextBox
                    AcceptsReturn="True"
                    AcceptsTab="True"
                    Text="{Binding Input, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding
                            Key="Enter"
                            Command="{Binding SendCommand}"
                            Modifiers="Ctrl" />
                    </TextBox.InputBindings>
                </TextBox>
                <StackPanel Grid.Column="1">
                    <Button
                        Width="32"
                        Height="32"
                        Margin="5"
                        HorizontalAlignment="Center"
                        Background="Transparent"
                        BorderThickness="0"
                        Command="{Binding SendCommand}"
                        ToolTip="Send">
                        <Image Source="{StaticResource SendDrawingImage}" />
                    </Button>
                    <Button
                        Width="32"
                        Height="32"
                        Margin="5"
                        HorizontalAlignment="Center"
                        Background="Transparent"
                        BorderThickness="0"
                        Command="{Binding StopCommand}"
                        ToolTip="Stop"
                        Visibility="{Binding SendCommand.IsRunning, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Image Source="{StaticResource StopDrawingImage}" />
                    </Button>
                </StackPanel>
            </Grid>
        </GroupBox>
        <GridSplitter
            Grid.Row="1"
            Height="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom"
            Background="Gray" />
        <GroupBox Grid.Row="2" Header="Result">
            <DockPanel LastChildFill="True">
                <ProgressBar
                    Height="4"
                    DockPanel.Dock="Top"
                    IsIndeterminate="{Binding SendCommand.IsRunning}"
                    Visibility="{Binding SendCommand.IsRunning, Converter={StaticResource BoolToVisibilityConverter}}" />
                <avalonEdit:TextEditor
                    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                    Name="textEditor"
                    Background="{DynamicResource VsBrush.Window}"
                    FontFamily="Consolas"
                    FontSize="10pt"
                    HorizontalScrollBarVisibility="Auto"
                    ShowLineNumbers="True"
                    SyntaxHighlighting="C#"
                    VerticalScrollBarVisibility="Auto"
                    Visibility="{Binding Output, Converter={StaticResource StringIsNullOrEmptyToVisibilityConveter}}">
                    <i:Interaction.Behaviors>
                        <local:AvalonEditBehavior CodeText="{Binding Output}" />
                    </i:Interaction.Behaviors>
                </avalonEdit:TextEditor>
            </DockPanel>
        </GroupBox>
        <Grid Grid.Row="4">
            <Button
                Width="75"
                Height="23"
                Margin="0,0,15,0"
                HorizontalAlignment="Right"
                Content="{x:Static res:Resources.CancleBtn}"
                IsCancel="True" />
            <Button
                Width="75"
                Height="23"
                Margin="0,0,120,0"
                HorizontalAlignment="Right"
                Command="{Binding InsertCommand}"
                CommandParameter="{Binding ElementName=window}"
                Content="{Binding ActionBtnName}" />
        </Grid>
    </Grid>
</Window>
